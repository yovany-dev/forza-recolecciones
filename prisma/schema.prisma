// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  avatar    String
  password  String
  role      String
  createdAt DateTime  @default(now())
  drivers   Drivers[]
  copilot   Copilot[]
  report    Report[]
}

model Drivers {
  uuid           String   @id @default(uuid())
  employeeNumber String   @unique @db.VarChar(6)
  fullname       String
  dpi            String   @unique @db.VarChar(13)
  schedule       String
  position       String
  createdAt      DateTime @default(now())
  user           Users    @relation(fields: [userId], references: [id])
  userId         Int
}

model Copilot {
  uuid           String   @id @default(uuid())
  employeeNumber String   @unique @db.VarChar(6)
  fullname       String
  dpi            String   @unique @db.VarChar(13)
  schedule       String
  position       String
  createdAt      DateTime @default(now())
  user           Users    @relation(fields: [userId], references: [id])
  userId         Int
}

model Report {
  uuid           String   @id @default(uuid())
  employeeNumber String   @db.VarChar(6)
  fullname       String
  dpi            String   @db.VarChar(13)
  schedule       String
  position       String
  createdAt      DateTime @default(now()) @db.Timestamptz(3)
  updatedAt      DateTime @updatedAt @db.Timestamptz(3)
  user           Users?    @relation(fields: [userId], references: [id])
  userId         Int?
  checkIn        String
  location       Location @default(NO_DETECTADA)
  photo          Photo    @default(NO_CARGADA)
  state          State    @default(PENDIENTE)

  @@map("reports")
}

enum Location {
  ADMIN
  DETECTADA
  NO_DETECTADA @map("NO DETECTADA")
}

enum Photo {
  ADMIN
  CARGADA
  NO_CARGADA @map("NO CARGADA")
}

enum State {
  ADMIN
  INGRESADO
  PENDIENTE
  INGRESO_TARDE @map("INGRESO TARDE")
}
